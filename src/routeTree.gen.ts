/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as PetEditIdImport } from './routes/pet-edit/$id'
import { Route as PetDetailsIdImport } from './routes/pet-details/$id'
import { Route as OrgDetailsIdImport } from './routes/org-details/$id'
import { Route as AuthenticatedPetEditImport } from './routes/_authenticated/pet-edit'
import { Route as AuthenticatedOrgsImport } from './routes/_authenticated/orgs'
import { Route as AuthenticatedOrgEditImport } from './routes/_authenticated/org-edit'
import { Route as AuthenticatedCreatePetImport } from './routes/_authenticated/create-pet'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const PetEditIdRoute = PetEditIdImport.update({
  path: '/pet-edit/$id',
  getParentRoute: () => rootRoute,
} as any)

const PetDetailsIdRoute = PetDetailsIdImport.update({
  path: '/pet-details/$id',
  getParentRoute: () => rootRoute,
} as any)

const OrgDetailsIdRoute = OrgDetailsIdImport.update({
  path: '/org-details/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedPetEditRoute = AuthenticatedPetEditImport.update({
  path: '/pet-edit',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedOrgsRoute = AuthenticatedOrgsImport.update({
  path: '/orgs',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedOrgEditRoute = AuthenticatedOrgEditImport.update({
  path: '/org-edit',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCreatePetRoute = AuthenticatedCreatePetImport.update({
  path: '/create-pet',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/create-pet': {
      id: '/_authenticated/create-pet'
      path: '/create-pet'
      fullPath: '/create-pet'
      preLoaderRoute: typeof AuthenticatedCreatePetImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/org-edit': {
      id: '/_authenticated/org-edit'
      path: '/org-edit'
      fullPath: '/org-edit'
      preLoaderRoute: typeof AuthenticatedOrgEditImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/orgs': {
      id: '/_authenticated/orgs'
      path: '/orgs'
      fullPath: '/orgs'
      preLoaderRoute: typeof AuthenticatedOrgsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pet-edit': {
      id: '/_authenticated/pet-edit'
      path: '/pet-edit'
      fullPath: '/pet-edit'
      preLoaderRoute: typeof AuthenticatedPetEditImport
      parentRoute: typeof AuthenticatedImport
    }
    '/org-details/$id': {
      id: '/org-details/$id'
      path: '/org-details/$id'
      fullPath: '/org-details/$id'
      preLoaderRoute: typeof OrgDetailsIdImport
      parentRoute: typeof rootRoute
    }
    '/pet-details/$id': {
      id: '/pet-details/$id'
      path: '/pet-details/$id'
      fullPath: '/pet-details/$id'
      preLoaderRoute: typeof PetDetailsIdImport
      parentRoute: typeof rootRoute
    }
    '/pet-edit/$id': {
      id: '/pet-edit/$id'
      path: '/pet-edit/$id'
      fullPath: '/pet-edit/$id'
      preLoaderRoute: typeof PetEditIdImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedCreatePetRoute: typeof AuthenticatedCreatePetRoute
  AuthenticatedOrgEditRoute: typeof AuthenticatedOrgEditRoute
  AuthenticatedOrgsRoute: typeof AuthenticatedOrgsRoute
  AuthenticatedPetEditRoute: typeof AuthenticatedPetEditRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedCreatePetRoute: AuthenticatedCreatePetRoute,
  AuthenticatedOrgEditRoute: AuthenticatedOrgEditRoute,
  AuthenticatedOrgsRoute: AuthenticatedOrgsRoute,
  AuthenticatedPetEditRoute: AuthenticatedPetEditRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/create-pet': typeof AuthenticatedCreatePetRoute
  '/org-edit': typeof AuthenticatedOrgEditRoute
  '/orgs': typeof AuthenticatedOrgsRoute
  '/pet-edit': typeof AuthenticatedPetEditRoute
  '/org-details/$id': typeof OrgDetailsIdRoute
  '/pet-details/$id': typeof PetDetailsIdRoute
  '/pet-edit/$id': typeof PetEditIdRoute
  '/': typeof AuthenticatedIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/create-pet': typeof AuthenticatedCreatePetRoute
  '/org-edit': typeof AuthenticatedOrgEditRoute
  '/orgs': typeof AuthenticatedOrgsRoute
  '/pet-edit': typeof AuthenticatedPetEditRoute
  '/org-details/$id': typeof OrgDetailsIdRoute
  '/pet-details/$id': typeof PetDetailsIdRoute
  '/pet-edit/$id': typeof PetEditIdRoute
  '/': typeof AuthenticatedIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_authenticated/create-pet': typeof AuthenticatedCreatePetRoute
  '/_authenticated/org-edit': typeof AuthenticatedOrgEditRoute
  '/_authenticated/orgs': typeof AuthenticatedOrgsRoute
  '/_authenticated/pet-edit': typeof AuthenticatedPetEditRoute
  '/org-details/$id': typeof OrgDetailsIdRoute
  '/pet-details/$id': typeof PetDetailsIdRoute
  '/pet-edit/$id': typeof PetEditIdRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/signup'
    | '/create-pet'
    | '/org-edit'
    | '/orgs'
    | '/pet-edit'
    | '/org-details/$id'
    | '/pet-details/$id'
    | '/pet-edit/$id'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/create-pet'
    | '/org-edit'
    | '/orgs'
    | '/pet-edit'
    | '/org-details/$id'
    | '/pet-details/$id'
    | '/pet-edit/$id'
    | '/'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/signup'
    | '/_authenticated/create-pet'
    | '/_authenticated/org-edit'
    | '/_authenticated/orgs'
    | '/_authenticated/pet-edit'
    | '/org-details/$id'
    | '/pet-details/$id'
    | '/pet-edit/$id'
    | '/_authenticated/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  OrgDetailsIdRoute: typeof OrgDetailsIdRoute
  PetDetailsIdRoute: typeof PetDetailsIdRoute
  PetEditIdRoute: typeof PetEditIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  OrgDetailsIdRoute: OrgDetailsIdRoute,
  PetDetailsIdRoute: PetDetailsIdRoute,
  PetEditIdRoute: PetEditIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/signup",
        "/org-details/$id",
        "/pet-details/$id",
        "/pet-edit/$id"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/create-pet",
        "/_authenticated/org-edit",
        "/_authenticated/orgs",
        "/_authenticated/pet-edit",
        "/_authenticated/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authenticated/create-pet": {
      "filePath": "_authenticated/create-pet.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/org-edit": {
      "filePath": "_authenticated/org-edit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/orgs": {
      "filePath": "_authenticated/orgs.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pet-edit": {
      "filePath": "_authenticated/pet-edit.tsx",
      "parent": "/_authenticated"
    },
    "/org-details/$id": {
      "filePath": "org-details/$id.tsx"
    },
    "/pet-details/$id": {
      "filePath": "pet-details/$id.tsx"
    },
    "/pet-edit/$id": {
      "filePath": "pet-edit/$id.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
